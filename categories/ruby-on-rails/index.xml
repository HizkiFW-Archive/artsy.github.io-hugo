<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ruby on Rails on Artsy Engineering</title>
    <link>https://hizkifw.github.io/artsy.github.io-hugo/categories/ruby-on-rails/</link>
    <description>Recent content in Ruby on Rails on Artsy Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 16 May 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hizkifw.github.io/artsy.github.io-hugo/categories/ruby-on-rails/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Generating Automatic Plain Text MIME Parts with Rails ActionMailer</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2012/05/16/generating-automatic-plain-text-mime-parts-with-rails-actionmailer/</link>
      <pubDate>Wed, 16 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2012/05/16/generating-automatic-plain-text-mime-parts-with-rails-actionmailer/</guid>
      <description>&lt;p&gt;E-mail is one of the most important ways to engage your users. And every time you touch a user&amp;rsquo;s inbox, it reflects on your brand. But getting email right has become increasing difficult due to the complexities introduced by the thousands of web-based, desktop and mobile mail clients. Email formatting is like the &amp;ldquo;Hunger Games&amp;rdquo; where the major players include online services such as GMail, Yahoo, Hotmail or AOL, desktop clients such as Outlook and a myriad mobile devices ranging from iPhone and Android to Blackberry.&lt;/p&gt;

&lt;p&gt;To deal with this landscape, the MIME standard allows systems to send e-mail with multiple parts: &lt;code&gt;plain/text&lt;/code&gt; for business-efficient devices such as the Blackberry, and &lt;code&gt;text/html&lt;/code&gt; for web-based e-mail readers, such as GMail. Furthermore, &lt;code&gt;ActionMailer&lt;/code&gt; supports multiple template formats: create an &lt;code&gt;.html.haml&lt;/code&gt; template along with a &lt;code&gt;.txt.haml&lt;/code&gt; template to generate both. We also know that &lt;code&gt;text/plain&lt;/code&gt; email helps deliverability, but we believe a disproportionately small amount of text e-mails are actually read - the vast majority of devices are capable of parsing some HTML.&lt;/p&gt;

&lt;p&gt;Is it possible to avoid having to maintain two separate templates without sacrificing deliverability? How can we inject a &lt;code&gt;text/plain&lt;/code&gt; part into HTML e-mail that is both useful and &amp;ldquo;free&amp;rdquo;?&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>