<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Customisation on Artsy Engineering</title>
    <link>https://hizkifw.github.io/artsy.github.io-hugo/categories/customisation/</link>
    <description>Recent content in Customisation on Artsy Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 29 Mar 2013 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hizkifw.github.io/artsy.github.io-hugo/categories/customisation/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Musical Chairs</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2013/03/29/musical-chairs/</link>
      <pubDate>Fri, 29 Mar 2013 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2013/03/29/musical-chairs/</guid>
      <description>&lt;p&gt;At Artsy we make Artsy Folio. Folio is an awesome portfolio app that shows our gallery and museum partners their artworks in one place, allows them to easily get information about their inventory and to send works by email to their contacts.&lt;/p&gt;

&lt;p&gt;Folio has to deal with large multi-gigabyte syncs in order to operate offline. That makes for a great user experience, but for the developer working on the sync, it&amp;rsquo;s not as pleasant. Combined with our use of Core Data, the appâ€™s maturity, and dealing with data store migrations, things can get hairy. We needed a tool that could freeze and restore app data at will, obviating the need for constant syncing and resyncing.&lt;/p&gt;

&lt;p&gt;That&amp;rsquo;s why I built &lt;a href=&#34;https://github.com/orta/chairs&#34;&gt;chairs&lt;/a&gt;&amp;hellip;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>On Making It Personal in iOS with Searchbars</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2012/05/11/on-making-it-personal--in-iOS-with-searchbars/</link>
      <pubDate>Fri, 11 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2012/05/11/on-making-it-personal--in-iOS-with-searchbars/</guid>
      <description>&lt;p&gt;We make Folio, a pretty kick-ass iPad app that we give away to our partners to showcase their inventory at art fairs. Whilst making it we tried to ensure that all of the application fits in with the &lt;a href=&#34;http://artsy.net&#34;&gt;Artsy&lt;/a&gt; website aesthetic, and recently the last natively styled control fell to our mighty code hammers. That was the &lt;code&gt;UISearchBar&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://ortastuff.s3.amazonaws.com/images/custom_searchbar_example.jpg&#34; alt=&#34;Screenshot of Artsy Folio&#34; /&gt;&lt;/p&gt;

&lt;p&gt;When displaying only search results in a table it makes a lot of sense to use Apple&amp;rsquo;s &lt;code&gt;UISearchDisplayController&lt;/code&gt; as it handles a lot of edge cases for you. However the downside is that you lose some control over how the views interact.&lt;/p&gt;

&lt;p&gt;The search bar was the only native control that actually made it into the version 1 release. This was mainly due to it requiring a bit of black magic in order to get it to work the way we wanted. So lets go through the code and rip it to pieces.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>