<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Rack on Artsy Engineering</title>
    <link>https://hizkifw.github.io/artsy.github.io-hugo/categories/rack/</link>
    <description>Recent content in Rack on Artsy Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Nov 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hizkifw.github.io/artsy.github.io-hugo/categories/rack/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>How to Monitor 503s and Timeout Requests on Heroku</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2012/11/15/how-to-monitor-503s-and-timeout-on-heroku/</link>
      <pubDate>Thu, 15 Nov 2012 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2012/11/15/how-to-monitor-503s-and-timeout-on-heroku/</guid>
      <description>&lt;p&gt;We have recently started hitting an unusually high number of &amp;ldquo;503: Service Unavailable&amp;rdquo; errors with one of our applications on Heroku. What are these? How can we monitor their quantity and frequency? What&amp;rsquo;s the fix?&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://hizkifw.github.io/artsy.github.io-hugo/images/2012-11-15-how-to-monitor-503s-and-timeout-on-heroku/503-error.png&#34;&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>10x Rack and Rails Output Compression with Rack::Deflater</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2012/02/24/10x-rack-and-rails-output-compression-with-rack-deflater/</link>
      <pubDate>Fri, 24 Feb 2012 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2012/02/24/10x-rack-and-rails-output-compression-with-rack-deflater/</guid>
      <description>&lt;p&gt;You can quickly reduce the amount of data transferred from your Rack or Rails application with &lt;a href=&#34;https://github.com/rack/rack/blob/master/lib/rack/deflater.rb&#34;&gt;Rack::Deflater&lt;/a&gt;. Anecdotal evidence shows a reduction from a 50Kb JSON response into about 6Kb. It may be a huge deal for your mobile clients.&lt;/p&gt;

&lt;p&gt;For a Rails application, modify config/application.rb or config/environment.rb.&lt;/p&gt;

&lt;p&gt;``` ruby config/application.rb
Acme::Application.configure do
  config.middleware.use Rack::Deflater
end&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;
For a Rack application, add the middleware in config.ru.

``` ruby config.ru
use Rack::Deflater
run Acme::Instance
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>