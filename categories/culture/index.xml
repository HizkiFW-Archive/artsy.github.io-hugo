<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Culture on Artsy Engineering</title>
    <link>https://hizkifw.github.io/artsy.github.io-hugo/categories/culture/</link>
    <description>Recent content in Culture on Artsy Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Sep 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hizkifw.github.io/artsy.github.io-hugo/categories/culture/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Introducing Peril to the Artsy Org</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2017/09/04/Introducing-Peril/</link>
      <pubDate>Mon, 04 Sep 2017 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2017/09/04/Introducing-Peril/</guid>
      <description>&lt;p&gt;Once Danger Ruby was stable enough for everyday use in 2015, it became obvious that running Danger on CI was both a
positive and a negative. On the positive side, Danger has access to all artifacts created during testing - and on the negative
side it takes a long time to get feedback. It was obvious that Danger could &lt;a href=&#34;https://github.com/danger/danger/issues/42&#34;&gt;run on a server&lt;/a&gt;, but it was a big unknown what that could look like.&lt;/p&gt;

&lt;p&gt;Eventually, &lt;a href=&#34;https://hizkifw.github.io/artsy.github.io-hugo/blog/2017/06/30/danger-one-oh-again/&#34;&gt;I came to the conclusion&lt;/a&gt; that we would need a JavaScript replacement of Danger - and so I applied
constraints to Danger JS that made a server-side version of Danger a possibility. It was a stroke of luck that around the
time Danger JS became usable for day to day usage, that GitHub introduced &lt;a href=&#34;https://developer.github.com/changes/2016-09-14-Integrations-Early-Access/&#34;&gt;GitHub Apps&lt;/a&gt; - so I started work on Peril. Peril is server-side Danger. The rest of this post talks about how we use it Artsy today, how you can use it yourself and where it&amp;rsquo;s heading.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Danger</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2017/06/30/danger-one-oh-again/</link>
      <pubDate>Fri, 30 Jun 2017 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2017/06/30/danger-one-oh-again/</guid>
      <description>&lt;p&gt;Danger came out of two needs. One from the needs of a growing dev team working together full-time, and the other from the needs of a completely asymmetric large Open Source project.&lt;/p&gt;

&lt;p&gt;A work environment dev team is a complex place. You naturally grow, and to grow safely you add process. Process is a mixed bag, it&amp;rsquo;s a net benefit at the trade-off of individual&amp;rsquo;s time vs team cohesion. You want to grow your team guided by smart applications of process.&lt;/p&gt;

&lt;p&gt;On the other hand, working on a large open source project, it&amp;rsquo;s easy to feel overwhelmed at the amount of work that needs to get done on a daily basis. The growth of your OSS team probably doesn&amp;rsquo;t tie to the amount of work that needs to be done. Especially if you&amp;rsquo;re like me, and you don&amp;rsquo;t want to be maintaining OSS as a 2nd full-time job.&lt;/p&gt;

&lt;p&gt;So what do you do? Well in a work environment you don&amp;rsquo;t really have a choice, as a team you hold each other to the rules that you set. In OSS, you sacrifice your spare time or you can find time at work, you could stop or you could burn out.&lt;/p&gt;

&lt;p&gt;And this is the environment in which the idea of Danger was incubated.&lt;/p&gt;

&lt;p&gt;Today mark version 1.0 of the second version of Danger. I&amp;rsquo;m going to cover what they are, how they continue to grow and what I see their trajectory as.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Open Source FAQ for Engineers</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2017/01/04/OSS-FAQ/</link>
      <pubDate>Wed, 04 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2017/01/04/OSS-FAQ/</guid>
      <description>&lt;p&gt;We have a lot of Open Source code. For engineers without considerable experience in the open source realm, understanding some of the copyright issues around code ownership can be tricky. I&amp;rsquo;ve been working with our CTO &lt;a href=&#34;http://artsy.github.io/author/db/&#34;&gt;dB.&lt;/a&gt;, and our senior counsel &lt;a href=&#34;http://www.theartgorgeous.com/yayoi-shionoiri/&#34;&gt;Yayoi Shionoiri&lt;/a&gt; on creating an open-source FAQ for engineers.&lt;/p&gt;

&lt;h3 id=&#34;what-is-open-source&#34;&gt;What is Open Source?&lt;/h3&gt;

&lt;p&gt;Open Source code is code that can be freely examined, used, adapted, and shared by all through a license that sets forth these principles.  The only potential limitation that an Open Source license is likely to impose is that future copies of the code (whether in adapted or un-adapted form) be themselves licensed in a manner consistent with the original license.  At Artsy, we are committed to making our engineering work &lt;a href=&#34;http://code.dblock.org/2015/02/09/becoming-open-source-by-default.html&#34;&gt;Open Source by default&lt;/a&gt;.  A list of our Open Source projects can be &lt;a href=&#34;http://artsy.github.io/open-source/&#34;&gt;found here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Help! I&#39;m becoming Post-Junior</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2016/10/10/Help-Im-becoming-Post-Junior/</link>
      <pubDate>Mon, 10 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2016/10/10/Help-Im-becoming-Post-Junior/</guid>
      <description>&lt;p&gt;I’ve lived in NYC for 2 years now. I’ve been around long enough that some of the people I helped when they started learning have begun to feel like they’re not “Juniors” anymore.&lt;/p&gt;

&lt;p&gt;They have begun feeling confident in their code, their responsibilities at the company and wanting to improve both. It&amp;rsquo;s a feeling that maybe, just maybe, &lt;a href=&#34;https://ashfurrow.com/blog/normalizing-struggle/&#34;&gt;you&amp;rsquo;re not struggling to stay afloat anymore&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This post aims to be technology-agnostic, and if you sit somewhere at 1.5 - 3 years of programming experience then you’ll probably get something out of it. On top of that,  I’ll give some pragmatic JS and iOS specific tips at the end.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dev Interviews: Maxim Cramer</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2016/09/16/Dev-Interview-Maxim-Cramer/</link>
      <pubDate>Fri, 16 Sep 2016 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2016/09/16/Dev-Interview-Maxim-Cramer/</guid>
      <description>&lt;p&gt;I&amp;rsquo;m happy to introduce the next in the &lt;a href=&#34;http://artsy.github.io/series/dev-interviews/&#34;&gt;Dev Interviews&lt;/a&gt; series - &lt;a href=&#34;http://www.mennenia.com/&#34;&gt;Maxim Cramer&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Maxim has been at Artsy for 6 month, working on our mobile app Eigen. Our interview covers how being a remote developer, advice for people at a HQ working with remotes, her work with React Native and what the future holds for the Artsy mobile team.&lt;/p&gt;

&lt;p&gt;Jump &lt;a href=&#34;https://www.youtube.com/watch?v=ftsBR_KqHcE&#34;&gt;to YouTube&lt;/a&gt; for the video, or click more for a inline video.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dev Interviews: Craig Spaeth</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2016/08/09/Dev-Interview-Craig-Spaeth/</link>
      <pubDate>Tue, 09 Aug 2016 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2016/08/09/Dev-Interview-Craig-Spaeth/</guid>
      <description>&lt;p&gt;Hello everyone! Orta here, over the summer I&amp;rsquo;ve started a series of interviews with the entire development team at Artsy. They&amp;rsquo;re all on different topics, notably around technical and cultural issues. I&amp;rsquo;ve recorded a few of them already, and will be sporadically releasing them. I&amp;rsquo;m still getting the hang of editing and recording side of this, so give me some slack.&lt;/p&gt;

&lt;p&gt;Anyway, I&amp;rsquo;m pumped to introduce the first in the series - &lt;a href=&#34;http://craigspaeth.com/&#34;&gt;Craig Spaeth&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Craig has been at Artsy for 6 years, moving from the first on-site developer to Director of Web. Our interview covered how Artsy&amp;rsquo;s development team has adapted over time to the changing demands of a growing company. When he joined, Artsy was 6 people, we&amp;rsquo;re now at ~145 people, ~20 developers and 3 businesses.&lt;/p&gt;

&lt;p&gt;Jump &lt;a href=&#34;https://www.youtube.com/watch?v=-0WK1Ebis3M&#34;&gt;to YouTube&lt;/a&gt; for the video, or click more for a inline video.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Handling Large OSS Projects Defensively</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2016/07/03/handling-big-projects/</link>
      <pubDate>Sun, 03 Jul 2016 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2016/07/03/handling-big-projects/</guid>
      <description>&lt;p&gt;I help maintain big OSS projects: from a third-party &lt;a href=&#34;https://cocoapods.org&#34;&gt;dependency manager&lt;/a&gt; used in most iOS apps (&lt;a href=&#34;https://github.com/CocoaPods/cocoapods.org&#34;&gt;CocoaPods&lt;/a&gt;), to the most popular Objective-C &lt;a href=&#34;http://cocoapods.org/pods/Specta&#34;&gt;testing framework&lt;/a&gt; and the most popular Swift &lt;a href=&#34;http://cocoapods.org/pods/Moya&#34;&gt;networking API client&lt;/a&gt;. I&amp;rsquo;ve been doing this for years.&lt;/p&gt;

&lt;p&gt;Projects with this much impact are big time-sinks. This time comes from ensuring infrastructure continues to work, support tickets need replies, new code needs reviewing and releases need coordinating.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://hizkifw.github.io/artsy.github.io-hugo/images/2016-07-03-big-oss/danger_logo_black@2x.png&#34; alt=&#34;&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Last September, almost a year ago, I started work on a new project, &lt;a href=&#34;https://github.com/danger/danger/&#34;&gt;Danger&lt;/a&gt;. Danger fixes a problem we were seeing in the Artsy mobile team around adding &amp;ldquo;&lt;a href=&#34;https://github.com/artsy/mobile/issues/31&#34;&gt;process&lt;/a&gt;&amp;rdquo; to our team.&lt;/p&gt;

&lt;p&gt;As a part of discussing Danger internally, I&amp;rsquo;ve referenced that building CocoaPods has greatly influenced Danger. This blog post is about the way I&amp;rsquo;ve built Danger, knowing fully well that I cannot afford the level of time to maintain it at the scale it may get to.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Being a Better Programmer When You&#39;re Actually Lazy.</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2016/03/02/Lazily-Automation/</link>
      <pubDate>Wed, 02 Mar 2016 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2016/03/02/Lazily-Automation/</guid>
      <description>&lt;p&gt;I juggle a bunch of projects, both in Artsy and in the Open Source community. If you don&amp;rsquo;t work with me directly, you&amp;rsquo;d be mistaken for believing that I was an organized person. I&amp;rsquo;m pretty far from that, and &lt;a href=&#34;https://github.com/artsy/mobile/issues/68&#34;&gt;don&amp;rsquo;t really&lt;/a&gt; plan on changing that.&lt;/p&gt;

&lt;p&gt;However, I work with other people and very strongly believe that programming is mostly a social problem once you&amp;rsquo;re good enough at writing code. It&amp;rsquo;d be hypocritical of me to not improve the people process side, so I try to automate processes that makes me a better team-mate.&lt;/p&gt;

&lt;p&gt;I&amp;rsquo;m going to cover four things I&amp;rsquo;ve worked on lately to improve this: &lt;a href=&#34;https://github.com/danger/danger/&#34;&gt;Danger&lt;/a&gt;, &lt;a href=&#34;https://github.com/orta/github-clippers&#34;&gt;GitHub-Clippers&lt;/a&gt; and improving how I write commits and prefixing my name on branches.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>