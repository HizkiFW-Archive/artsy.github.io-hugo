<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Jenkins on Artsy Engineering</title>
    <link>https://hizkifw.github.io/artsy.github.io-hugo/categories/jenkins/</link>
    <description>Recent content in Jenkins on Artsy Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 10 Jul 2012 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hizkifw.github.io/artsy.github.io-hugo/categories/jenkins/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>On-Demand Jenkins Slaves with Amazon EC2</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2012/07/10/on-demand-jenkins-slaves-with-amazon-ec2/</link>
      <pubDate>Tue, 10 Jul 2012 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2012/07/10/on-demand-jenkins-slaves-with-amazon-ec2/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://artsy.net&#34;&gt;Artsy&lt;/a&gt; team faithfully uses &lt;a href=&#34;http://jenkins-ci.org&#34;&gt;Jenkins&lt;/a&gt; for continuous integration. &lt;a href=&#34;http://artsy.github.com/blog/2012/05/27/using-jenkins-for-ruby-and-ruby-on-rails-teams/&#34;&gt;As we&amp;rsquo;ve described before&lt;/a&gt;, our Jenkins master and 8 slaves run on Linode. This arrangement has at least a few drawbacks:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Our Linode servers are manually configured. They require frequent maintenance, and inconsistencies lead to surprising build failures.&lt;/li&gt;
&lt;li&gt;The fixed set of slaves don&amp;rsquo;t match the pattern of our build jobs: jobs get backed up during the day, but servers are mostly unused overnight and on weekends.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The &lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/Amazon+EC2+Plugin&#34;&gt;Amazon EC2 Plugin&lt;/a&gt; allowed us to replace those slaves with a totally scripted environment. Now, slaves are spun up in the cloud whenever build jobs need them.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Using Jenkins for Ruby and Ruby-on-Rails Teams</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2012/05/27/using-jenkins-for-ruby-and-ruby-on-rails-teams/</link>
      <pubDate>Sun, 27 May 2012 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2012/05/27/using-jenkins-for-ruby-and-ruby-on-rails-teams/</guid>
      <description>&lt;p&gt;The &lt;a href=&#34;http://jenkins-ci.org&#34;&gt;Jenkins CI&lt;/a&gt; project has grown tremendously in the past few months. There&amp;rsquo;re now hundreds of plugins and an amazing engaged community. Artsy is a happy user and proud contributor to this effort with the essential &lt;a href=&#34;https://wiki.jenkins-ci.org/display/JENKINS/AnsiColor+Plugin&#34;&gt;jenkins-ansicolor plugin&lt;/a&gt;, eliminating boring console output since 2011.&lt;/p&gt;

&lt;p&gt;We are a continuous integration, deployment and devops shop and have been using Jenkins for over a year now. We&amp;rsquo;ve shared our experience at the &lt;a href=&#34;http://www.cloudbees.com/juc2012.cb&#34;&gt;Jenkins User Conference 2012&lt;/a&gt; in &lt;a href=&#34;http://www.slideshare.net/dblockdotorg/graduating-to-jenkins-ci-for-rubyonrails-teams&#34;&gt;a presentation&lt;/a&gt;. This blog post is an overview of how to get started with Jenkins for Ruby(-on-Rails) teams.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;Artsy Jenkins CI&#34; alt=&#34;/images/2012-05-27-using-jenkins-for-ruby-on-rails-teams/jenkins.png&#34; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>