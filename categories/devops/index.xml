<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Devops on Artsy Engineering</title>
    <link>https://hizkifw.github.io/artsy.github.io-hugo/categories/devops/</link>
    <description>Recent content in Devops on Artsy Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 13 Jan 2017 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="https://hizkifw.github.io/artsy.github.io-hugo/categories/devops/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Xcode 8 Manual Codesigning with Fastlane</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2017/01/13/xcode-8-fastlane-codesigning/</link>
      <pubDate>Fri, 13 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2017/01/13/xcode-8-fastlane-codesigning/</guid>
      <description>&lt;p&gt;New year, new deploy process! Late last year our mobile team completed the update to Swift 3 (and thus, the update to Xcode 8). The latest version of Apple&amp;rsquo;s IDE includes a lovely feature: automating provisioning profile management! (Note: not sarcasm, the feature is really nice. Check out the &lt;a href=&#34;https://developer.apple.com/videos/play/wwdc2016/401/&#34;&gt;WWDC video&lt;/a&gt; for an in-depth exploration.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://hizkifw.github.io/artsy.github.io-hugo/images/2017-01-13-xcode-8-fastlane-codesigning/xcode-screenshot.png&#34; alt=&#34;Automatic code signing settings&#34; /&gt;&lt;/p&gt;

&lt;p&gt;However, when I went to make our first &lt;a href=&#34;http://artsy.github.io/blog/2015/12/15/Automating-Testflight-Deploys/&#34;&gt;automated deploy&lt;/a&gt; today, things didn&amp;rsquo;t work; I got a somewhat cryptic error about code signing.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Automating TestFlight Deploys using Fastlane</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2015/12/15/Automating-Testflight-Deploys/</link>
      <pubDate>Tue, 15 Dec 2015 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2015/12/15/Automating-Testflight-Deploys/</guid>
      <description>&lt;p&gt;I&amp;rsquo;ve been a really &lt;a href=&#34;http://artsy.github.io/blog/2015/09/18/Cocoa-Architecture-Dependencies/&#34;&gt;strong supporter&lt;/a&gt; of the &lt;a href=&#34;https://fastlane.tools&#34;&gt;fastlane&lt;/a&gt; toolset. I think it fixes a lot of common developer problems, in a space that Apple doesn&amp;rsquo;t really touch. The command line.&lt;/p&gt;

&lt;p&gt;We&amp;rsquo;ve added hints of fastlane to our apps at different rates, &lt;a href=&#34;https://github.com/artsy/eidolon/&#34;&gt;Eidolon&lt;/a&gt; uses fastlane for everything but &lt;a href=&#34;https://github.com/artsy/eigen/&#34;&gt;Eigen&lt;/a&gt;/&lt;a href=&#34;https://github.com/artsy/energy&#34;&gt;Energy&lt;/a&gt;/&lt;a href=&#34;https://github.com/artsy/emergence&#34;&gt;Emergence&lt;/a&gt; have been pretty slow on the uptake, though they have more complicated setups, being App Store apps.&lt;/p&gt;

&lt;p&gt;When &lt;a href=&#34;https://krausefx.com/&#34;&gt;Felix&lt;/a&gt; announced &lt;a href=&#34;https://krausefx.com/blog/introducing-match-a-new-approach-to-code-signing&#34;&gt;match&lt;/a&gt; this week, I felt like he tackled a problem we face in our &lt;a href=&#34;http://artsy.net/job/mobile-engineer&#34;&gt;small dev team&lt;/a&gt;. I integrated this, only to find that it could also fix my problems with deployment. The rest of this post goes into the &amp;ldquo;how I did this.&amp;rdquo; You can also cheat and look at the &lt;a href=&#34;https://github.com/artsy/eigen/compare/d06270882aadec8f03927455a5229b53dd0a73c8...9eaf9082ebdcdf75f12ad2804260587e01526f2d&#34;&gt;commits&lt;/a&gt; directly.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Releasecop Tracks Stale Releases</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2015/09/04/releasecop-tracks-stale-releases/</link>
      <pubDate>Fri, 04 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2015/09/04/releasecop-tracks-stale-releases/</guid>
      <description>&lt;p&gt;Artsy practices a sort of &lt;a href=&#34;http://en.wikipedia.org/wiki/Continuous_delivery&#34;&gt;continuous delivery&lt;/a&gt;. We keep release cycles short and the process of reviewing, testing, and deploying our software as reliable, fast, and automated as possible. (This blog has touched on these practices &lt;a href=&#34;http://artsy.github.io/blog/categories/testing/&#34;&gt;multiple&lt;/a&gt; &lt;a href=&#34;http://artsy.github.io/blog/categories/continuous-integration&#34;&gt;times&lt;/a&gt;.)&lt;/p&gt;

&lt;p&gt;Usually, commits that have been reviewed and merged are immediately built and tested. Successfully built versions of the codebase are often automatically deployed to a staging environment. On an automated or frequent-but-manual basis, that version is deployed to a production environment. Thus, commits form a pipeline:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;From developers&amp;rsquo; working branches&lt;/li&gt;
&lt;li&gt;To the master branch&lt;/li&gt;
&lt;li&gt;Through a hopefully-successful build&lt;/li&gt;
&lt;li&gt;To a staging environment&lt;/li&gt;
&lt;li&gt;To production&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The number of apps and services we deploy has grown to &lt;em&gt;dozens&lt;/em&gt; per team, so sometimes things fall through the cracks. We&amp;rsquo;ve been using &lt;a href=&#34;https://github.com/joeyAghion/releasecop&#34;&gt;Releasecop&lt;/a&gt; for the last few months to get gentle email reminders when an environment could use a deploy.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>So You Want an SSL Certificate? A Pragmatic Handbook</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2015/04/09/so-you-want-an-ssl-certificate/</link>
      <pubDate>Thu, 09 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2015/04/09/so-you-want-an-ssl-certificate/</guid>
      <description>&lt;p&gt;Obtaining, reissuing and installing SSL certificates across various pieces of Artsy infrastructure (read about our tech stack &lt;a href=&#34;https://hizkifw.github.io/artsy.github.io-hugo/blog/2015/03/23/artsy-technology-stack-2015/&#34;&gt;here&lt;/a&gt;) is a mind-numbing excercise dreaded by every platform engineer. Few people really understand what&amp;rsquo;s going on, installing SSL certificates is right up there in the opaque world of user-unfriendliness, along with onboarding a new iOS developer in an organization with Xcode.&lt;/p&gt;

&lt;p&gt;Still, it can be done - below is our cookbook.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#39;https://hizkifw.github.io/artsy.github.io-hugo/images/2015-04-09-so-you-want-an-ssl-certificate/ev.png&#39;&gt;
&lt;img src=&#39;https://hizkifw.github.io/artsy.github.io-hugo/images/2015-04-09-so-you-want-an-ssl-certificate/cert.png&#39;&gt;&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>How to Write Great Outage Post-Mortems</title>
      <link>https://hizkifw.github.io/artsy.github.io-hugo/2014/11/19/how-to-write-great-outage-post-mortems/</link>
      <pubDate>Wed, 19 Nov 2014 00:00:00 +0000</pubDate>
      
      <guid>https://hizkifw.github.io/artsy.github.io-hugo/2014/11/19/how-to-write-great-outage-post-mortems/</guid>
      <description>&lt;p&gt;The website is finally back up after crashing hard for 4 hours straight.&lt;/p&gt;

&lt;p&gt;Recently AWS decided to &lt;a href=&#34;http://aws.amazon.com/blogs/aws/ec2-maintenance-update&#34;&gt;reboot a few of your servers for a critical update&lt;/a&gt;. It didn&amp;rsquo;t seem like it was going to be a big deal, except that the schedule was only accommodating if you were in the Pacific Northwest. The first reboot took out a secondary replica of our MongoDB database. Unfortunately &lt;a href=&#34;https://github.com/mongoid/moped/issues/321&#34;&gt;the driver handled that poorly&lt;/a&gt; and spent the first 400ms of every subsequent HTTP request trying to reconnect to the missing instance. That server came back up, but failed to find its storage volumes because of a human mistake in a past migration and the alerts were mistakenly silenced by someone monitoring the system. A few hours later the primary was being stepped down and rebooted, sending the driver into panic over &lt;a href=&#34;https://github.com/mongoid/moped/issues/323&#34;&gt;another bug&lt;/a&gt;. The site went down.&lt;/p&gt;

&lt;p&gt;None of this was obvious while it was happening as the rate of automated alerts grew. Engineers communicated to the team that they are actively focusing on bringing the systems back up. This helped to fend off a large amount of instant messages, e-mails, texts and phone calls from various people on the team that were in the middle of demoing something to a very important prospective customer on the other side of the planet. It was also the middle of the night in New York.&lt;/p&gt;

&lt;p&gt;Now that all the systems are back up, lets write a detailed outage post-mortem.&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>